#!/usr/bin/env perl

use autodie;
use Modern::Perl;

my %redirects;

open my $fh, '<', 'redirects';
for my $line (<$fh>) {
    chomp $line;

    if ($line =~ /^(\S+)\s+(\S+)$/) {
        $redirects{$1} = $2;
    }
}
close $fh;

for my $file (@ARGV) {
    open my $fh, '<', $file;

    my @lines;
    my $h2_count = 0;
    while (my $s = <$fh>) {
        # Remove excerpts
        $s =~ s/\{%\s*excerpt\s*%\}\r?\n//sg;
        $s =~ s/\{%\s*endexcerpt\s*%\}\r?\n//sg;

        # Tags shouldn't be surrounded with []
        $s =~ s/^tags:\s*
                \[
                    (.+)
                \]
            /tags: $1/sgx;

        # Individual tags shouldn't be surrounded with ""
        if ($s =~ /^tags:\s*(.*)$/) {
            my @tags = split /,\s*/, $1;
            my $res = "tags: ";
            map { $_ =~ s/^"(.*)"$/$1/ } @tags;
            #map { $_ =~ s/^Games$/Gaming/ } @tags;
            $res .= join ", ", @tags;
            $res .= "\n";
            $s = $res;
        }

        # Remove quotes surrounding tags.
        if ($h2_count == 1) {
            $s =~ s/^(\w+):\s*"([^\]]+)"/$1: $2/;
        }

        # I used to insert level 2 headings in posts
        # but now we downvote headers after parse instead.
        if ($s =~ /^-+$/) {
            $h2_count++;
            $s = "=" x length($s) . "\n" if $h2_count > 2;
        }

        # Move images subdirectory
        #$s =~ s|<img src="/media/images|<img src="/images|sg;
        #$s =~ s"!\[\]\(/media/images"![](/images"sg;

        push @lines, $s;
    }
    close $fh;

    # Multiline escapes
    my $s = join "", @lines;

    # Replace depcrated <center>
    #$s =~ s|<center>(.+?)</center>|<div class="center">$1</div>|sg;

    # Replace old links with new
    while (my ($old, $new) = each %redirects) {
        $s =~ s|\Q$old\E|$new|gi;
    }

    # Replace with new syntax highlighting
    $s =~ s/\{%\s*highlight\s+(\w+)\s*%\}(.*?)\{%\s*endhighlight\s*%\}/``` {.$1}$2```/sg;

    open $fh, '>', $file;
    print $fh $s;
}

