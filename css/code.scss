pre,
code {
  font-family: $code-font-family;
  font-size: 0.71rem;
  line-height: 1.45;
}
code {
  padding: 0.2em;
  margin: 0;
}
pre code {
  padding: 0;
}
pre {
  @extend %media-offset-wrapper;
  overflow-wrap: normal;
  overflow: auto;

  margin-bottom: 1em;
  padding: 0.4em 0.6em;
}
pre.regular {
  position: static;
  width: 100%;
}

@media only screen and (min-width: 900px) {
  // Avoid code poking out from footnotes too much
  .article-content .footnotes pre {
    max-width: 105%;
  }
}

code,
pre {
  color: $gb-lm-fg0;
  background-color: $gb-lm-bg0-hard;
}

.punctuation.definition.tag {
  color: $gb-lm-light-blue;
}
.punctuation.definition.entity {
  color: $gb-lm-light-purple;
}
.constant {
  color: $gb-lm-light-purple;
}
.constant.character.escape {
  color: $gb-lm-light-green;
}
.constant.other {
  color: $gb-lm-fg0;
}
.entity {
  color: $gb-lm-light-aqua;
}
.keyword.operator.comparison,
.keyword.operator,
.keyword.operator.symbolic,
.keyword.operator.string,
.keyword.operator.assignment,
.keyword.operator.arithmetic,
.keyword.operator.class,
.keyword.operator.key,
.keyword.operator.logical {
  color: $gb-lm-light-orange;
}
.keyword,
.keyword.operator.new,
.keyword.other,
.keyword.control {
  color: $gb-lm-light-red;
}
.storage {
  color: $gb-lm-light-red;
}
.string,
.string.unquoted.heredoc .string {
  color: $gb-lm-light-green;
}
.comment {
  color: $gb-lm-dark-gray;
  font-style: italic;
}
.comment.documentation,
.comment.documentation .comment {
  color: $gb-lm-dark-orange;
}
.string.regexp .constant.character.escape {
  color: $gb-lm-light-green;
}
.support {
  color: $gb-lm-light-yellow;
}
.variable {
  color: $gb-lm-fg0;
}
.variable.language {
  color: $gb-lm-fg0;
}
.meta.function-call {
  color: $gb-lm-fg0;
}
.invalid {
  color: $gb-lm-fg0;
  background-color: $gb-lm-dark-red;
}
.text .source,
.string.unquoted.heredoc,
.source .source {
  color: $gb-lm-fg0;
}
.string.quoted .source {
  color: $gb-lm-light-green;
}
.string {
  color: $gb-lm-light-green;
}
.support.constant {
  color: $gb-lm-light-yellow;
}
.support.class {
  color: $gb-lm-light-aqua;
}
.support.function {
  color: $gb-lm-light-blue;
}
.entity.name.tag {
  color: $gb-lm-light-aqua;
  font-weight: bold;
}
.meta.tag,
.meta.tag .entity {
  color: $gb-lm-light-aqua;
}
.constant.other.color.rgb-value {
  color: $gb-lm-light-blue;
}
.meta.selector.css .entity.name.tag {
  color: $gb-lm-light-red;
}
.meta.selector.css,
.entity.other.attribute-name.id {
  color: $gb-lm-light-green;
}
.meta.selector.css .entity.other.attribute-name.class {
  color: $gb-lm-light-green;
}
.support.type.property-name.css {
  color: $gb-lm-light-aqua;
}
.meta.preprocessor {
  color: $gb-lm-dark-purple;
}
.meta.preprocessor.at-rule .keyword.control.at-rule {
  color: $gb-lm-light-yellow;
}
.meta.property-value .constant {
  color: $gb-lm-light-yellow;
}
.variable .keyword,
.function .keyword {
  color: $gb-lm-light-purple;
}
.variable .entity {
  color: $gb-lm-light-aqua;
}

// Specific languages
.meta.diff,
.meta.diff.header {
  color: $gb-lm-light-blue;
}
.markup.deleted {
  color: $gb-lm-light-red;
}
.markup.changed {
  color: $gb-lm-light-yellow;
}
.markup.inserted {
  color: $gb-lm-light-aqua;
}

.markup.bold {
  font-weight: bold;
}
.markup.italic {
  font-style: italic;
}
.markup.heading {
  color: $gb-lm-light-aqua;
  font-weight: bold;
}
.markdown .punctuation {
  color: $gb-lm-light-red;
}
.link.reference.markdown .other,
.link.reference.def.markdown .entity.name {
  color: $gb-lm-light-purple;
}
.link.reference.def.markdown .link,
.link.inline.markdown .link {
  color: $gb-lm-light-blue;
}
.link.reference.def.markdown .link.description,
.link.reference.def.markdown .link.description .punctuation {
  color: $gb-lm-light-green;
}

.entity.name.type.class.php {
  color: $gb-lm-light-aqua;
}
.keyword.other.phpdoc {
  color: $gb-lm-dark-gray;
}

.meta.property-value .support.constant.named-color.css {
  color: $gb-lm-light-orange;
}
.meta.constructor.argument.css {
  color: $gb-lm-light-yellow;
}
.constant.numeric.css,
.keyword.other.unit.css {
  color: $gb-lm-light-purple;
}
.punctuation.definition.entity.css {
  color: $gb-lm-light-green;
}

.variable.language.js {
  color: $gb-lm-light-yellow;
}
.string.unquoted.label.js {
  color: $gb-lm-fg0;
}

.constant.other.table-name.sql {
  color: $gb-lm-light-green;
}
.constant.other.database-name.sql {
  color: $gb-lm-light-green;
}

.storage.type.dired.item.directory,
.dired.item.directory {
  color: $gb-lm-light-aqua;
}

.function-call.name.fish .keyword .string {
  color: $gb-lm-light-purple;
}
.function-call.parameter.fish .string {
  color: $gb-lm-fg0;
}
.function-call.parameter.option.fish .string,
.function-call.arguments.shell .option {
  color: $gb-lm-light-aqua;
}
.function-call.name.fish .function .string,
.function-call.shell .function {
  color: $gb-lm-light-blue;
}
.function-call.parameter.fish .string .variable-expansion .variable {
  color: $gb-lm-light-yellow;
}
.function-call.name.fish .invalid.variable-expansion,
.function-call.invalid.fish {
  color: $gb-lm-light-yellow;
  background-color: $gb-lm-bg0-hard;
}

.support.macro.rust {
  color: $gb-lm-light-aqua;
}
.storage.type.rust,
.storage.modifier.rust {
  color: $gb-lm-light-purple;
}
.meta.path.rust {
  color: $gb-lm-light-red;
}
.keyword.other.rust {
  color: $gb-lm-light-blue;
}
.annotation.rust .punctuation {
  color: $gb-lm-light-orange;
}
.annotation.rust .parameters {
  color: $gb-lm-light-yellow;
}
.annotation.rust .variable {
  color: $gb-lm-light-aqua;
}

.named-arg.racket {
  color: $gb-lm-light-yellow;
}
.quote.racket,
.quote.racket .variable {
  color: $gb-lm-light-yellow;
}
.quote.racket > .punctuation {
  color: $gb-lm-light-orange;
}

.named-arg.pollen {
  color: $gb-lm-light-yellow;
}
.quote.pollen,
.quote.pollen .variable {
  color: $gb-lm-light-yellow;
}
.quote.pollen > .punctuation {
  color: $gb-lm-light-orange;
}
.function.magic,
.magic.begin.pollen,
.magic.end.pollen {
  color: $gb-lm-light-orange;
}
