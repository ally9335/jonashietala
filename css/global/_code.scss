@use "melange" as *;
@use "../global/font_size" as *;

code {
  background-color: var(--melange_a_float);
}

pre,
pre code {
  background-color: var(--melange_a_float);
}

// mmh... This isn't very pretty I know.
// But I guess it's good enough.
pre {
  code.highlight::before {
    float: right;
    @include font-size("s");
    color: var(--melange_a_ui);
    position: relative;
    top: -0.5rem;
    left: 0.1rem;
  }
  code.highlight.python::before {
    content: "python";
  }
  code.highlight.fish::before {
    content: "fish";
  }
  code.highlight.c::before {
    content: "c";
  }
  code.highlight.cpp::before {
    content: "c++";
  }
  code.highlight.bash::before {
    content: "bash";
  }
  code.highlight.html::before {
    content: "html";
  }
  code.highlight.js::before {
    content: "js";
  }
  code.highlight.haskell::before {
    content: "haskell";
  }
  code.highlight.pollen::before {
    content: "pollen";
  }
  code.highlight.racket::before {
    content: "racket";
  }
  code.highlight.json::before {
    content: "json";
  }
  code.highlight.md::before {
    content: "markdown";
  }
  code.highlight.css::before {
    content: "css";
  }
  code.highlight.diff::before {
    content: "diff";
  }
  code.highlight.lua::before {
    content: "lua";
  }
  code.highlight.markdown::before {
    content: "markdown";
  }
  code.highlight.ml::before {
    content: "ml";
  }
  code.highlight.perl::before {
    content: "perl";
  }
  code.highlight.ruby::before {
    content: "ruby";
  }
  code.highlight.rust::before {
    content: "rust";
  }
  code.highlight.scss::before {
    content: "scss";
  }
  code.highlight.shell::before {
    content: "shell";
  }
  code.highlight.vhdl::before {
    content: "vhdl";
  }
  code.highlight.vim::before {
    content: "vimscript";
  }
  code.highlight.xml::before {
    content: "xml";
  }
  code.highlight.yaml::before {
    content: "yaml";
  }
  code.highlight.toml::before {
    content: "toml";
  }
}

// @media (prefers-color-scheme: dark) {
//   code {
//     background-color: var(--melange_a_float);
//   }

//   pre,
//   pre code {
//     background-color: var(--melange_a_bg);
//   }
// }

code,
pre {
  color: var(--melange_a_fg);
}

// .punctuation.definition.tag {
//   color: $gb-lm-light-blue;
// }
// .punctuation.definition.entity {
//   color: $gb-lm-light-purple;
// }
.constant {
  color: var(--melange_c_magenta);
}
// .constant.character.escape {
//   color: $gb-lm-light-green;
// }
// .constant.other {
//   color: $gb-lm-fg0;
// }
// .entity {
//   color: $gb-lm-light-aqua;
// }
.keyword.operator.comparison,
.keyword.operator,
.keyword.operator.symbolic,
.keyword.operator.string,
.keyword.operator.assignment,
.keyword.operator.arithmetic,
.keyword.operator.class,
.keyword.operator.key,
.keyword.operator.logical {
  color: var(--melange_b_red);
}
.keyword,
.keyword.operator.new,
.keyword.other,
.keyword.control,
.keyword.control .punctuation {
  color: var(--melange_c_yellow);
}
.storage {
  color: var(--melange_c_cyan);
}
.string,
.string.unquoted.heredoc .string {
  color: var(--melange_b_blue);
  font-style: italic;
}
.comment {
  color: var(--melange_a_com);
  font-style: italic;
}
.string.regexp {
  color: var(--melange_b_blue);
}
.string.regexp .constant.character.escape {
  color: var(--melange_b_blue);
}
// .support {
//   color: $gb-lm-light-yellow;
// }
// .variable {
//   color: $gb-lm-fg0;
// }
.variable.language {
  color: var(--melange_b_red);
}
.meta.function-call {
  color: var(--melange_b_yellow);
}
// .invalid {
//   color: $gb-lm-fg0;
//   background-color: $gb-lm-dark-red;
// }
// .text .source,
// .string.unquoted.heredoc,
// .source .source {
//   color: $gb-lm-fg0;
// }
// .string.quoted .source {
//   color: $gb-lm-light-green;
// }
// .string {
//   color: $gb-lm-light-green;
// }
// .support.constant {
//   color: $gb-lm-light-yellow;
// }
// .support.class {
//   color: $gb-lm-light-aqua;
// }
.support.function,
.entity.name.function {
  color: var(--melange_b_yellow);
}
.entity.name.tag {
  color: var(--melange_b_yellow);
  font-weight: bold;
}
.function.return-type {
  color: var(--melange_c_cyan);
}
.entity.name.type {
  color: var(--melange_c_cyan);
}
.meta.tag,
.meta.tag .entity.name.table {
  color: var(--melange_c_green);
}
// .constant.other.color.rgb-value {
//   color: $gb-lm-light-blue;
// }
.meta.selector.css .entity.name.tag {
  color: var(--melange_c_cyan);
}
// .meta.selector.css,
// .entity.other.attribute-name.id {
// Just normal fg
// }
// .meta.selector.css .entity.other.attribute-name.class {
//   color: $gb-lm-light-green;
// }
// .support.type.property-name.css {
//   color: $gb-lm-light-aqua;
// }
.meta.preprocessor,
.meta.preprocessor .keyword.control {
  color: var(--melange_b_green);
}
// .meta.preprocessor.at-rule .keyword.control.at-rule {
//   color: $gb-lm-light-yellow;
// }
// .meta.property-value .constant {
//   color: $gb-lm-light-yellow;
// }
.meta.attribute-with-value {
  color: var(--melange_b_cyan);
}
// .variable .keyword,
// .function .keyword {
//   color: $gb-lm-light-purple;
// }
// .variable .entity {
//   color: $gb-lm-light-aqua;
// }

// // Specific languages
// .meta.diff,
// .meta.diff.header {
//   color: $gb-lm-light-blue;
// }
// .markup.deleted {
//   color: $gb-lm-light-red;
// }
// .markup.changed {
//   color: $gb-lm-light-yellow;
// }
// .markup.inserted {
//   color: $gb-lm-light-aqua;
// }

// .markup.bold {
//   font-weight: bold;
// }
// .markup.italic {
//   font-style: italic;
// }
// .markup.heading {
//   color: $gb-lm-light-aqua;
//   font-weight: bold;
// }
.punctuation.tag,
.punctuation.definition,
.punctuation.section {
  color: var(--melange_a_ui);
}
.link.reference.markdown .other,
.link.reference.def.markdown .entity.name {
  color: var(--melange_c_cyan);
}
.link.reference.def.markdown .link,
.link.inline.markdown .link {
  color: var(--melange_b_blue);
}
.markup.underline {
  text-decoration: underline;
}
.entity.custom-property,
.variable.custom-property {
  color: var(--melange_b_blue);
}
// .link.reference.def.markdown .link.description,
// .link.reference.def.markdown .link.description .punctuation {
//   color: $gb-lm-light-green;
// }

// .entity.name.type.class.php {
//   color: $gb-lm-light-aqua;
// }
// .keyword.other.phpdoc {
//   color: $gb-lm-dark-gray;
// }

// .meta.property-value .support.constant.named-color.css {
//   color: $gb-lm-light-orange;
// }
// .meta.constructor.argument.css {
//   color: $gb-lm-light-yellow;
// }
// .constant.numeric.css,
// .keyword.other.unit.css {
//   color: $gb-lm-light-purple;
// }
// .punctuation.definition.entity.css {
//   color: $gb-lm-light-green;
// }

// .variable.language.js {
//   color: $gb-lm-light-yellow;
// }
// .string.unquoted.label.js {
//   color: $gb-lm-fg0;
// }

// .constant.other.table-name.sql {
//   color: $gb-lm-light-green;
// }
// .constant.other.database-name.sql {
//   color: $gb-lm-light-green;
// }

// .storage.type.dired.item.directory,
// .dired.item.directory {
//   color: $gb-lm-light-aqua;
// }

.function-call.fish .keyword.control .string.unquoted {
  color: var(--melange_c_yellow);
}
// .function-call.name.fish .keyword .string {
//   color: $gb-lm-light-purple;
// }
.function-call.parameter.fish .string.unquoted {
  color: var(--melange_a_com);
}
.meta.function-call.arguments.shell {
  color: var(--melange_a_fg);
}
.function-call.name.fish .function .string,
.function-call.shell .function {
  color: var(--melange_b_yellow);
}
// .function-call.parameter.fish .string .variable-expansion .variable {
//   color: $gb-lm-light-yellow;
// }
// .function-call.name.fish .invalid.variable-expansion,
// .function-call.invalid.fish {
//   color: $gb-lm-light-yellow;
//   background-color: $gb-lm-bg0-hard;
// }

.support.macro {
  color: var(--melange_b_yellow);
}
.storage.type.rust {
  color: var(--melange_b_green);
}
.storage.modifier.rust {
  color: var(--melange_c_yellow);
}
// .meta.path.rust { // Standard is fine
//   color: $gb-lm-light-red;
// }
// .keyword.other.rust {
//   color: $gb-lm-light-blue;
// }
.rust .punctuation {
  color: var(--melange_a_ui);
}
.punctuation.accessor {
  color: var(--melange_c_yellow);
}
// .annotation.rust .parameters {
//   color: $gb-lm-light-yellow;
// }
// .annotation.rust .variable {
//   color: $gb-lm-light-aqua;
// }

.named-arg.racket,
.named-arg.pollen {
  color: var(--melange_c_magenta);
}
// .quote.racket,
// .quote.racket .variable {
//   color: var(--melange_c_magenta);
// }
// .quote.racket > .punctuation {
//   color: $gb-lm-light-orange;
// }

// .variable.other.pollen,
// .variable.other.racket {
//   color: var(--melange_b_yellow);
// }
// .quote.pollen,
// .quote.pollen .variable {
//   color: var(--melange_c_blue);
// }
// .quote.pollen > .punctuation {
//   color: $gb-lm-light-orange;
// }
.function.magic,
.magic.begin.pollen,
.magic.end.pollen {
  color: var(--melange_c_yellow);
}

.punctuation.definition.variable.sass {
  color: var(--melange_a_fg);
}
